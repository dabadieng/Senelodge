# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
        image_directory: '%kernel.project_dir%/public/upload/image'
        app.path.ad_images: /uploads/images

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    
    #Vich\UploaderBundle\Naming\SlugNamer:
        #public: true
        #arguments:
            #$service: '@App\Repository\ImageRepository'
            #$method: findOneByUrl        

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\PaginationService:
        arguments:
            $templatePath: 'admin/partials/pagination.html.twig' 

    # Permet d'écouter l'événement de connection et de vérifier si l'user à validé son compte '
    App\EventListener\LoginListener:
      tags:
        - { name: 'kernel.event_listener', event: 'security.authentication.success' }
